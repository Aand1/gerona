<?xml version="1.0"?>
<!--
This launches the core nodes of the navigation project.
Note, that you still need additional nodes for mapping and localization.
To use any obstacle avoidance, you further need a node that publishes a
pointcloud that is used for obstacle detection.

The alternative launchfile `full.launch` contains nodes for all those
tasks and can be used instead of this file.
-->
<launch>
    <arg name="robot_controller" default="$(optenv ROBOT_CONTROLLER ackermann_kinematic)" />
    <arg name="algo" default="AStar" />

    <arg name="c1" default="true" />
    <arg name="c2" default="true" />
    <arg name="c3" default="true" />

    <arg name="s1" default="true" />
    <arg name="s2" default="true" />
    <arg name="s3" default="true" />
    <arg name="s4" default="true" />
    
    <arg name="use_planner_cost" default="false" />
    <arg name="use_planner_dynamic" default="false" />
	 <arg name="use_planner_static" default="false" />
	 <arg name="use_planner_default" default="true" />

    <include file="$(find path_planner)/launch/path_planner.launch">
        <arg name="use_planner_cost" value="$(arg use_planner_cost)" />
        <arg name="use_planner_dynamic" value="$(arg use_planner_dynamic)" />
        <arg name="use_planner_static" value="$(arg use_planner_static)" />
        <arg name="use_planner_default" value="$(arg use_planner_default)" />
    </include>

    <include file="$(find path_control)/launch/path_control.launch" />

	 <include file="$(find path_follower)/launch/follower.launch">
        <arg name="controller" value="$(arg robot_controller)" />
	<arg name="algo" value="$(arg algo)" />

        <arg name="c1" value="$(arg c1)" />
        <arg name="c2" value="$(arg c2)" />
        <arg name="c3" value="$(arg c3)" />

        <arg name="s1" value="$(arg s1)" />
        <arg name="s2" value="$(arg s2)" />
        <arg name="s3" value="$(arg s3)" />
        <arg name="s4" value="$(arg s4)" />

	 </include>

</launch>
